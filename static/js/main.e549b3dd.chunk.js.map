{"version":3,"sources":["components/AlertDismissable.js","pages/Abouttfjs.js","components/LoadButton.js","model/classes.js","config.js","pages/Classify.js","pages/NotFound.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["AlertDismissable","this","props","show","react_default","a","createElement","Alert","variant","onClose","dismissible","title","dangerouslySetInnerHTML","__html","message","Component","Home","className","href","LoadButton","_ref","isLoading","text","loadingText","_ref$className","_ref$disabled","disabled","Object","objectWithoutProperties","Button","assign","concat","Spinner","as","animation","size","role","aria-hidden","MODEL_CLASSES","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","src_config","API_ENDPOINT","MODEL_PATH","IMAGE_SIZE","CANVAS_SIZE","TOPK_PREDICTIONS","INDEXEDDB_KEY","Classify","_this","classCallCheck","_super","call","initWebcam","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","tf","webcam","refs","resizeWidth","resizeHeight","facingMode","sent","t0","noWebcam","style","display","stop","startWebcam","_callee2","_context2","start","stopWebcam","_callee3","_context3","getModelInfo","_callee5","_context5","fetch","config","method","then","_ref5","_callee4","response","_context4","json","data","modelLastUpdated","last_updated","catch","err","console","log","_x","apply","arguments","updateModel","_callee6","_context6","setState","isDownloadingModel","model","save","modelUpdateAvailable","showModelUpdateAlert","showModelUpdateSuccess","classifyLocalImage","_callee7","croppedCanvas","image","imageData","resizedImage","logits","probabilities","preds","context","ratioX","ratioY","ratio","_context7","isClassifying","cropper","getCroppedCanvas","fromPixels","toFloat","processImage","resizeBilinear","predict","getTopKClasses","predictions","photoSettingsOpen","state","canvas","getContext","width","height","Math","min","clearRect","drawImage","dispose","classifyWebcamImage","_callee8","imageCapture","resized","tensorData","_context8","capture","div","toPixels","_ref9","_callee9","_context9","abrupt","expandDims","sub","_x2","_ref10","_callee10","values","topK","valuesAndIndices","i","topkValues","topkIndices","_i","topClassesAndProbs","_i2","_context10","length","push","value","index","sort","b","Float32Array","Int32Array","probability","toFixed","_x3","_x4","handlePanelClick","event","handleFileChange","target","files","file","URL","createObjectURL","filename","name","handleTabSelect","activeKey","modelLoaded","isModelLoading","window","openDB","db","transaction","objectStore","get","item","dateSaved","Date","modelArtifactsInfo","getTime","warn","_context11","t1","_this2","e","_this3","react","onClick","aria-controls","aria-expanded","index_esm","Collapse","in","id","Container","modelType","Tabs","defaultActiveKey","onSelect","Tab","eventKey","ref","autoPlay","playsInline","muted","Form","Group","controlId","Label","Control","onChange","type","accept","react_cropper_default","src","guides","aspectRatio","viewMode","ListGroup","map","category","Item","key","pages_NotFound","Routes","childProps","react_router","path","exact","component","Abouttfjs","NotFound","App","dismissUpdateAlert","showUpdateAlert","reloadMsg","Navbar","collapseOnSelect","expand","Brand","Toggle","Nav","react_router_dom","to","pullRight","updateAvailable","paddingTop","components_AlertDismissable","withRouter","isLocalhost","Boolean","location","hostname","match","register","navigator","process","origin","addEventListener","swUrl","contentType","headers","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","newerSwAvailable","sw","onUpdate","waiting","active","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","error","Index","contentCached","handleUpdate","waitingServiceWorker","postMessage","src_App_0","ReactDOM","render","src_Index","document","getElementById"],"mappings":"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","file":"static/js/main.e549b3dd.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n/**\r\n * Class to handle the rendering of a dismissiable alert to use for things like errors.\r\n * @extends React.Component\r\n */\r\nclass AlertDismissable extends Component {\r\n\r\n  render() {\r\n    if (this.props.show) {\r\n      return (\r\n        <Alert variant={this.props.variant || 'danger'} onClose={this.props.onClose} dismissible>\r\n          { this.props.title && <h5><strong>{this.props.title}</strong></h5> }\r\n          <div dangerouslySetInnerHTML={{ __html: this.props.message }} />\r\n        </Alert>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AlertDismissable;\r\n","import React, { Component } from 'react';\nimport './Abouttfjs.css';\n\n/**\n * Class to handle the rendering of the Home page.\n * @extends React.Component\n */\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"About container\">\n        <h1>About: TensorFlow.js Classfier</h1>\n        <p>\n          This is a TensorFlow.js web application where users can classify images selected locally\n          or taken with their device's camera. The app uses TensorFlow.js and a pre-trained model (\n          <a href=\"https://www.tensorflow.org/api_docs/python/tf/keras/applications/MobileNetV2\">MobilenetV2 pertrained on ImageNet </a> ) converted to the TensorFlow.js format to provide the inference capabilities.\n          This pre-trained model is saved locally in your browser using IndexedDB. A service worker is also used\n          to provide offline capabilities. This option also provides better privacy and potentially a lower latency. \n        </p>\n\t\t    <p>Adapted from an Tensorflow.JS <a href=\"https://github.com/IBM/tfjs-web-app\">Repository by IBM</a> which is licensed under the Apache Software License, Version 2. </p>\n        <p> &copy; 2020 Michael Feil. Apache Software License, Version 2.</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport { Button, Spinner } from 'react-bootstrap';\r\n\r\n/**\r\n * This produces a button that will have a loading animation while the isLoading property is true.\r\n */\r\nexport default ({\r\n  isLoading,\r\n  text,\r\n  loadingText,\r\n  className = '',\r\n  disabled = false,\r\n  ...props\r\n}) =>\r\n  <Button\r\n    className={`LoadButton ${className}`}\r\n    disabled={disabled || isLoading}\r\n    {...props}\r\n  >\r\n    {isLoading && <Spinner\r\n      as=\"span\"\r\n      animation=\"border\"\r\n      size=\"sm\"\r\n      role=\"status\"\r\n      aria-hidden=\"true\"\r\n    />}{' '}\r\n    {isLoading ? loadingText : text}\r\n  </Button>;\r\n","/* eslint-disable */\r\n// Theses classes should correspond to the softmax output of your model.\r\n\r\nexport const MODEL_CLASSES = {\r\n  0: 'tench, Tinca tinca',\r\n  1: 'goldfish, Carassius auratus',\r\n  2: 'great white shark, white shark, man-eater, man-eating shark, Carcharodon carcharias',\r\n  3: 'tiger shark, Galeocerdo cuvieri',\r\n  4: 'hammerhead, hammerhead shark',\r\n  5: 'electric ray, crampfish, numbfish, torpedo',\r\n  6: 'stingray',\r\n  7: 'cock',\r\n  8: 'hen',\r\n  9: 'ostrich, Struthio camelus',\r\n  10: 'brambling, Fringilla montifringilla',\r\n  11: 'goldfinch, Carduelis carduelis',\r\n  12: 'house finch, linnet, Carpodacus mexicanus',\r\n  13: 'junco, snowbird',\r\n  14: 'indigo bunting, indigo finch, indigo bird, Passerina cyanea',\r\n  15: 'robin, American robin, Turdus migratorius',\r\n  16: 'bulbul',\r\n  17: 'jay',\r\n  18: 'magpie',\r\n  19: 'chickadee',\r\n  20: 'water ouzel, dipper',\r\n  21: 'kite',\r\n  22: 'bald eagle, American eagle, Haliaeetus leucocephalus',\r\n  23: 'vulture',\r\n  24: 'great grey owl, great gray owl, Strix nebulosa',\r\n  25: 'European fire salamander, Salamandra salamandra',\r\n  26: 'common newt, Triturus vulgaris',\r\n  27: 'eft',\r\n  28: 'spotted salamander, Ambystoma maculatum',\r\n  29: 'axolotl, mud puppy, Ambystoma mexicanum',\r\n  30: 'bullfrog, Rana catesbeiana',\r\n  31: 'tree frog, tree-frog',\r\n  32: 'tailed frog, bell toad, ribbed toad, tailed toad, Ascaphus trui',\r\n  33: 'loggerhead, loggerhead turtle, Caretta caretta',\r\n  34: 'leatherback turtle, leatherback, leathery turtle, Dermochelys coriacea',\r\n  35: 'mud turtle',\r\n  36: 'terrapin',\r\n  37: 'box turtle, box tortoise',\r\n  38: 'banded gecko',\r\n  39: 'common iguana, iguana, Iguana iguana',\r\n  40: 'American chameleon, anole, Anolis carolinensis',\r\n  41: 'whiptail, whiptail lizard',\r\n  42: 'agama',\r\n  43: 'frilled lizard, Chlamydosaurus kingi',\r\n  44: 'alligator lizard',\r\n  45: 'Gila monster, Heloderma suspectum',\r\n  46: 'green lizard, Lacerta viridis',\r\n  47: 'African chameleon, Chamaeleo chamaeleon',\r\n  48: 'Komodo dragon, Komodo lizard, dragon lizard, giant lizard, Varanus komodoensis',\r\n  49: 'African crocodile, Nile crocodile, Crocodylus niloticus',\r\n  50: 'American alligator, Alligator mississipiensis',\r\n  51: 'triceratops',\r\n  52: 'thunder snake, worm snake, Carphophis amoenus',\r\n  53: 'ringneck snake, ring-necked snake, ring snake',\r\n  54: 'hognose snake, puff adder, sand viper',\r\n  55: 'green snake, grass snake',\r\n  56: 'king snake, kingsnake',\r\n  57: 'garter snake, grass snake',\r\n  58: 'water snake',\r\n  59: 'vine snake',\r\n  60: 'night snake, Hypsiglena torquata',\r\n  61: 'boa constrictor, Constrictor constrictor',\r\n  62: 'rock python, rock snake, Python sebae',\r\n  63: 'Indian cobra, Naja naja',\r\n  64: 'green mamba',\r\n  65: 'sea snake',\r\n  66: 'horned viper, cerastes, sand viper, horned asp, Cerastes cornutus',\r\n  67: 'diamondback, diamondback rattlesnake, Crotalus adamanteus',\r\n  68: 'sidewinder, horned rattlesnake, Crotalus cerastes',\r\n  69: 'trilobite',\r\n  70: 'harvestman, daddy longlegs, Phalangium opilio',\r\n  71: 'scorpion',\r\n  72: 'black and gold garden spider, Argiope aurantia',\r\n  73: 'barn spider, Araneus cavaticus',\r\n  74: 'garden spider, Aranea diademata',\r\n  75: 'black widow, Latrodectus mactans',\r\n  76: 'tarantula',\r\n  77: 'wolf spider, hunting spider',\r\n  78: 'tick',\r\n  79: 'centipede',\r\n  80: 'black grouse',\r\n  81: 'ptarmigan',\r\n  82: 'ruffed grouse, partridge, Bonasa umbellus',\r\n  83: 'prairie chicken, prairie grouse, prairie fowl',\r\n  84: 'peacock',\r\n  85: 'quail',\r\n  86: 'partridge',\r\n  87: 'African grey, African gray, Psittacus erithacus',\r\n  88: 'macaw',\r\n  89: 'sulphur-crested cockatoo, Kakatoe galerita, Cacatua galerita',\r\n  90: 'lorikeet',\r\n  91: 'coucal',\r\n  92: 'bee eater',\r\n  93: 'hornbill',\r\n  94: 'hummingbird',\r\n  95: 'jacamar',\r\n  96: 'toucan',\r\n  97: 'drake',\r\n  98: 'red-breasted merganser, Mergus serrator',\r\n  99: 'goose',\r\n  100: 'black swan, Cygnus atratus',\r\n  101: 'tusker',\r\n  102: 'echidna, spiny anteater, anteater',\r\n  103: 'platypus, duckbill, duckbilled platypus, duck-billed platypus, Ornithorhynchus anatinus',\r\n  104: 'wallaby, brush kangaroo',\r\n  105: 'koala, koala bear, kangaroo bear, native bear, Phascolarctos cinereus',\r\n  106: 'wombat',\r\n  107: 'jellyfish',\r\n  108: 'sea anemone, anemone',\r\n  109: 'brain coral',\r\n  110: 'flatworm, platyhelminth',\r\n  111: 'nematode, nematode worm, roundworm',\r\n  112: 'conch',\r\n  113: 'snail',\r\n  114: 'slug',\r\n  115: 'sea slug, nudibranch',\r\n  116: 'chiton, coat-of-mail shell, sea cradle, polyplacophore',\r\n  117: 'chambered nautilus, pearly nautilus, nautilus',\r\n  118: 'Dungeness crab, Cancer magister',\r\n  119: 'rock crab, Cancer irroratus',\r\n  120: 'fiddler crab',\r\n  121: 'king crab, Alaska crab, Alaskan king crab, Alaska king crab, Paralithodes camtschatica',\r\n  122: 'American lobster, Northern lobster, Maine lobster, Homarus americanus',\r\n  123: 'spiny lobster, langouste, rock lobster, crawfish, crayfish, sea crawfish',\r\n  124: 'crayfish, crawfish, crawdad, crawdaddy',\r\n  125: 'hermit crab',\r\n  126: 'isopod',\r\n  127: 'white stork, Ciconia ciconia',\r\n  128: 'black stork, Ciconia nigra',\r\n  129: 'spoonbill',\r\n  130: 'flamingo',\r\n  131: 'little blue heron, Egretta caerulea',\r\n  132: 'American egret, great white heron, Egretta albus',\r\n  133: 'bittern',\r\n  134: 'crane',\r\n  135: 'limpkin, Aramus pictus',\r\n  136: 'European gallinule, Porphyrio porphyrio',\r\n  137: 'American coot, marsh hen, mud hen, water hen, Fulica americana',\r\n  138: 'bustard',\r\n  139: 'ruddy turnstone, Arenaria interpres',\r\n  140: 'red-backed sandpiper, dunlin, Erolia alpina',\r\n  141: 'redshank, Tringa totanus',\r\n  142: 'dowitcher',\r\n  143: 'oystercatcher, oyster catcher',\r\n  144: 'pelican',\r\n  145: 'king penguin, Aptenodytes patagonica',\r\n  146: 'albatross, mollymawk',\r\n  147: 'grey whale, gray whale, devilfish, Eschrichtius gibbosus, Eschrichtius robustus',\r\n  148: 'killer whale, killer, orca, grampus, sea wolf, Orcinus orca',\r\n  149: 'dugong, Dugong dugon',\r\n  150: 'sea lion',\r\n  151: 'Chihuahua',\r\n  152: 'Japanese spaniel',\r\n  153: 'Maltese dog, Maltese terrier, Maltese',\r\n  154: 'Pekinese, Pekingese, Peke',\r\n  155: 'Shih-Tzu',\r\n  156: 'Blenheim spaniel',\r\n  157: 'papillon',\r\n  158: 'toy terrier',\r\n  159: 'Rhodesian ridgeback',\r\n  160: 'Afghan hound, Afghan',\r\n  161: 'basset, basset hound',\r\n  162: 'beagle',\r\n  163: 'bloodhound, sleuthhound',\r\n  164: 'bluetick',\r\n  165: 'black-and-tan coonhound',\r\n  166: 'Walker hound, Walker foxhound',\r\n  167: 'English foxhound',\r\n  168: 'redbone',\r\n  169: 'borzoi, Russian wolfhound',\r\n  170: 'Irish wolfhound',\r\n  171: 'Italian greyhound',\r\n  172: 'whippet',\r\n  173: 'Ibizan hound, Ibizan Podenco',\r\n  174: 'Norwegian elkhound, elkhound',\r\n  175: 'otterhound, otter hound',\r\n  176: 'Saluki, gazelle hound',\r\n  177: 'Scottish deerhound, deerhound',\r\n  178: 'Weimaraner',\r\n  179: 'Staffordshire bullterrier, Staffordshire bull terrier',\r\n  180: 'American Staffordshire terrier, Staffordshire terrier, American pit bull terrier, pit bull terrier',\r\n  181: 'Bedlington terrier',\r\n  182: 'Border terrier',\r\n  183: 'Kerry blue terrier',\r\n  184: 'Irish terrier',\r\n  185: 'Norfolk terrier',\r\n  186: 'Norwich terrier',\r\n  187: 'Yorkshire terrier',\r\n  188: 'wire-haired fox terrier',\r\n  189: 'Lakeland terrier',\r\n  190: 'Sealyham terrier, Sealyham',\r\n  191: 'Airedale, Airedale terrier',\r\n  192: 'cairn, cairn terrier',\r\n  193: 'Australian terrier',\r\n  194: 'Dandie Dinmont, Dandie Dinmont terrier',\r\n  195: 'Boston bull, Boston terrier',\r\n  196: 'miniature schnauzer',\r\n  197: 'giant schnauzer',\r\n  198: 'standard schnauzer',\r\n  199: 'Scotch terrier, Scottish terrier, Scottie',\r\n  200: 'Tibetan terrier, chrysanthemum dog',\r\n  201: 'silky terrier, Sydney silky',\r\n  202: 'soft-coated wheaten terrier',\r\n  203: 'West Highland white terrier',\r\n  204: 'Lhasa, Lhasa apso',\r\n  205: 'flat-coated retriever',\r\n  206: 'curly-coated retriever',\r\n  207: 'golden retriever',\r\n  208: 'Labrador retriever',\r\n  209: 'Chesapeake Bay retriever',\r\n  210: 'German short-haired pointer',\r\n  211: 'vizsla, Hungarian pointer',\r\n  212: 'English setter',\r\n  213: 'Irish setter, red setter',\r\n  214: 'Gordon setter',\r\n  215: 'Brittany spaniel',\r\n  216: 'clumber, clumber spaniel',\r\n  217: 'English springer, English springer spaniel',\r\n  218: 'Welsh springer spaniel',\r\n  219: 'cocker spaniel, English cocker spaniel, cocker',\r\n  220: 'Sussex spaniel',\r\n  221: 'Irish water spaniel',\r\n  222: 'kuvasz',\r\n  223: 'schipperke',\r\n  224: 'groenendael',\r\n  225: 'malinois',\r\n  226: 'briard',\r\n  227: 'kelpie',\r\n  228: 'komondor',\r\n  229: 'Old English sheepdog, bobtail',\r\n  230: 'Shetland sheepdog, Shetland sheep dog, Shetland',\r\n  231: 'collie',\r\n  232: 'Border collie',\r\n  233: 'Bouvier des Flandres, Bouviers des Flandres',\r\n  234: 'Rottweiler',\r\n  235: 'German shepherd, German shepherd dog, German police dog, alsatian',\r\n  236: 'Doberman, Doberman pinscher',\r\n  237: 'miniature pinscher',\r\n  238: 'Greater Swiss Mountain dog',\r\n  239: 'Bernese mountain dog',\r\n  240: 'Appenzeller',\r\n  241: 'EntleBucher',\r\n  242: 'boxer',\r\n  243: 'bull mastiff',\r\n  244: 'Tibetan mastiff',\r\n  245: 'French bulldog',\r\n  246: 'Great Dane',\r\n  247: 'Saint Bernard, St Bernard',\r\n  248: 'Eskimo dog, husky',\r\n  249: 'malamute, malemute, Alaskan malamute',\r\n  250: 'Siberian husky',\r\n  251: 'dalmatian, coach dog, carriage dog',\r\n  252: 'affenpinscher, monkey pinscher, monkey dog',\r\n  253: 'basenji',\r\n  254: 'pug, pug-dog',\r\n  255: 'Leonberg',\r\n  256: 'Newfoundland, Newfoundland dog',\r\n  257: 'Great Pyrenees',\r\n  258: 'Samoyed, Samoyede',\r\n  259: 'Pomeranian',\r\n  260: 'chow, chow chow',\r\n  261: 'keeshond',\r\n  262: 'Brabancon griffon',\r\n  263: 'Pembroke, Pembroke Welsh corgi',\r\n  264: 'Cardigan, Cardigan Welsh corgi',\r\n  265: 'toy poodle',\r\n  266: 'miniature poodle',\r\n  267: 'standard poodle',\r\n  268: 'Mexican hairless',\r\n  269: 'timber wolf, grey wolf, gray wolf, Canis lupus',\r\n  270: 'white wolf, Arctic wolf, Canis lupus tundrarum',\r\n  271: 'red wolf, maned wolf, Canis rufus, Canis niger',\r\n  272: 'coyote, prairie wolf, brush wolf, Canis latrans',\r\n  273: 'dingo, warrigal, warragal, Canis dingo',\r\n  274: 'dhole, Cuon alpinus',\r\n  275: 'African hunting dog, hyena dog, Cape hunting dog, Lycaon pictus',\r\n  276: 'hyena, hyaena',\r\n  277: 'red fox, Vulpes vulpes',\r\n  278: 'kit fox, Vulpes macrotis',\r\n  279: 'Arctic fox, white fox, Alopex lagopus',\r\n  280: 'grey fox, gray fox, Urocyon cinereoargenteus',\r\n  281: 'tabby, tabby cat',\r\n  282: 'tiger cat',\r\n  283: 'Persian cat',\r\n  284: 'Siamese cat, Siamese',\r\n  285: 'Egyptian cat',\r\n  286: 'cougar, puma, catamount, mountain lion, painter, panther, Felis concolor',\r\n  287: 'lynx, catamount',\r\n  288: 'leopard, Panthera pardus',\r\n  289: 'snow leopard, ounce, Panthera uncia',\r\n  290: 'jaguar, panther, Panthera onca, Felis onca',\r\n  291: 'lion, king of beasts, Panthera leo',\r\n  292: 'tiger, Panthera tigris',\r\n  293: 'cheetah, chetah, Acinonyx jubatus',\r\n  294: 'brown bear, bruin, Ursus arctos',\r\n  295: 'American black bear, black bear, Ursus americanus, Euarctos americanus',\r\n  296: 'ice bear, polar bear, Ursus Maritimus, Thalarctos maritimus',\r\n  297: 'sloth bear, Melursus ursinus, Ursus ursinus',\r\n  298: 'mongoose',\r\n  299: 'meerkat, mierkat',\r\n  300: 'tiger beetle',\r\n  301: 'ladybug, ladybeetle, lady beetle, ladybird, ladybird beetle',\r\n  302: 'ground beetle, carabid beetle',\r\n  303: 'long-horned beetle, longicorn, longicorn beetle',\r\n  304: 'leaf beetle, chrysomelid',\r\n  305: 'dung beetle',\r\n  306: 'rhinoceros beetle',\r\n  307: 'weevil',\r\n  308: 'fly',\r\n  309: 'bee',\r\n  310: 'ant, emmet, pismire',\r\n  311: 'grasshopper, hopper',\r\n  312: 'cricket',\r\n  313: 'walking stick, walkingstick, stick insect',\r\n  314: 'cockroach, roach',\r\n  315: 'mantis, mantid',\r\n  316: 'cicada, cicala',\r\n  317: 'leafhopper',\r\n  318: 'lacewing, lacewing fly',\r\n  319: \"dragonfly, darning needle, devil's darning needle, sewing needle, snake feeder, snake doctor, mosquito hawk, skeeter hawk\",\r\n  320: 'damselfly',\r\n  321: 'admiral',\r\n  322: 'ringlet, ringlet butterfly',\r\n  323: 'monarch, monarch butterfly, milkweed butterfly, Danaus plexippus',\r\n  324: 'cabbage butterfly',\r\n  325: 'sulphur butterfly, sulfur butterfly',\r\n  326: 'lycaenid, lycaenid butterfly',\r\n  327: 'starfish, sea star',\r\n  328: 'sea urchin',\r\n  329: 'sea cucumber, holothurian',\r\n  330: 'wood rabbit, cottontail, cottontail rabbit',\r\n  331: 'hare',\r\n  332: 'Angora, Angora rabbit',\r\n  333: 'hamster',\r\n  334: 'porcupine, hedgehog',\r\n  335: 'fox squirrel, eastern fox squirrel, Sciurus niger',\r\n  336: 'marmot',\r\n  337: 'beaver',\r\n  338: 'guinea pig, Cavia cobaya',\r\n  339: 'sorrel',\r\n  340: 'zebra',\r\n  341: 'hog, pig, grunter, squealer, Sus scrofa',\r\n  342: 'wild boar, boar, Sus scrofa',\r\n  343: 'warthog',\r\n  344: 'hippopotamus, hippo, river horse, Hippopotamus amphibius',\r\n  345: 'ox',\r\n  346: 'water buffalo, water ox, Asiatic buffalo, Bubalus bubalis',\r\n  347: 'bison',\r\n  348: 'ram, tup',\r\n  349: 'bighorn, bighorn sheep, cimarron, Rocky Mountain bighorn, Rocky Mountain sheep, Ovis canadensis',\r\n  350: 'ibex, Capra ibex',\r\n  351: 'hartebeest',\r\n  352: 'impala, Aepyceros melampus',\r\n  353: 'gazelle',\r\n  354: 'Arabian camel, dromedary, Camelus dromedarius',\r\n  355: 'llama',\r\n  356: 'weasel',\r\n  357: 'mink',\r\n  358: 'polecat, fitch, foulmart, foumart, Mustela putorius',\r\n  359: 'black-footed ferret, ferret, Mustela nigripes',\r\n  360: 'otter',\r\n  361: 'skunk, polecat, wood pussy',\r\n  362: 'badger',\r\n  363: 'armadillo',\r\n  364: 'three-toed sloth, ai, Bradypus tridactylus',\r\n  365: 'orangutan, orang, orangutang, Pongo pygmaeus',\r\n  366: 'gorilla, Gorilla gorilla',\r\n  367: 'chimpanzee, chimp, Pan troglodytes',\r\n  368: 'gibbon, Hylobates lar',\r\n  369: 'siamang, Hylobates syndactylus, Symphalangus syndactylus',\r\n  370: 'guenon, guenon monkey',\r\n  371: 'patas, hussar monkey, Erythrocebus patas',\r\n  372: 'baboon',\r\n  373: 'macaque',\r\n  374: 'langur',\r\n  375: 'colobus, colobus monkey',\r\n  376: 'proboscis monkey, Nasalis larvatus',\r\n  377: 'marmoset',\r\n  378: 'capuchin, ringtail, Cebus capucinus',\r\n  379: 'howler monkey, howler',\r\n  380: 'titi, titi monkey',\r\n  381: 'spider monkey, Ateles geoffroyi',\r\n  382: 'squirrel monkey, Saimiri sciureus',\r\n  383: 'Madagascar cat, ring-tailed lemur, Lemur catta',\r\n  384: 'indri, indris, Indri indri, Indri brevicaudatus',\r\n  385: 'Indian elephant, Elephas maximus',\r\n  386: 'African elephant, Loxodonta africana',\r\n  387: 'lesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens',\r\n  388: 'giant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca',\r\n  389: 'barracouta, snoek',\r\n  390: 'eel',\r\n  391: 'coho, cohoe, coho salmon, blue jack, silver salmon, Oncorhynchus kisutch',\r\n  392: 'rock beauty, Holocanthus tricolor',\r\n  393: 'anemone fish',\r\n  394: 'sturgeon',\r\n  395: 'gar, garfish, garpike, billfish, Lepisosteus osseus',\r\n  396: 'lionfish',\r\n  397: 'puffer, pufferfish, blowfish, globefish',\r\n  398: 'abacus',\r\n  399: 'abaya',\r\n  400: \"academic gown, academic robe, judge's robe\",\r\n  401: 'accordion, piano accordion, squeeze box',\r\n  402: 'acoustic guitar',\r\n  403: 'aircraft carrier, carrier, flattop, attack aircraft carrier',\r\n  404: 'airliner',\r\n  405: 'airship, dirigible',\r\n  406: 'altar',\r\n  407: 'ambulance',\r\n  408: 'amphibian, amphibious vehicle',\r\n  409: 'analog clock',\r\n  410: 'apiary, bee house',\r\n  411: 'apron',\r\n  412: 'ashcan, trash can, garbage can, wastebin, ash bin, ash-bin, ashbin, dustbin, trash barrel, trash bin',\r\n  413: 'assault rifle, assault gun',\r\n  414: 'backpack, back pack, knapsack, packsack, rucksack, haversack',\r\n  415: 'bakery, bakeshop, bakehouse',\r\n  416: 'balance beam, beam',\r\n  417: 'balloon',\r\n  418: 'ballpoint, ballpoint pen, ballpen, Biro',\r\n  419: 'Band Aid',\r\n  420: 'banjo',\r\n  421: 'bannister, banister, balustrade, balusters, handrail',\r\n  422: 'barbell',\r\n  423: 'barber chair',\r\n  424: 'barbershop',\r\n  425: 'barn',\r\n  426: 'barometer',\r\n  427: 'barrel, cask',\r\n  428: 'barrow, garden cart, lawn cart, wheelbarrow',\r\n  429: 'baseball',\r\n  430: 'basketball',\r\n  431: 'bassinet',\r\n  432: 'bassoon',\r\n  433: 'bathing cap, swimming cap',\r\n  434: 'bath towel',\r\n  435: 'bathtub, bathing tub, bath, tub',\r\n  436: 'beach wagon, station wagon, wagon, estate car, beach waggon, station waggon, waggon',\r\n  437: 'beacon, lighthouse, beacon light, pharos',\r\n  438: 'beaker',\r\n  439: 'bearskin, busby, shako',\r\n  440: 'beer bottle',\r\n  441: 'beer glass',\r\n  442: 'bell cote, bell cot',\r\n  443: 'bib',\r\n  444: 'bicycle-built-for-two, tandem bicycle, tandem',\r\n  445: 'bikini, two-piece',\r\n  446: 'binder, ring-binder',\r\n  447: 'binoculars, field glasses, opera glasses',\r\n  448: 'birdhouse',\r\n  449: 'boathouse',\r\n  450: 'bobsled, bobsleigh, bob',\r\n  451: 'bolo tie, bolo, bola tie, bola',\r\n  452: 'bonnet, poke bonnet',\r\n  453: 'bookcase',\r\n  454: 'bookshop, bookstore, bookstall',\r\n  455: 'bottlecap',\r\n  456: 'bow',\r\n  457: 'bow tie, bow-tie, bowtie',\r\n  458: 'brass, memorial tablet, plaque',\r\n  459: 'brassiere, bra, bandeau',\r\n  460: 'breakwater, groin, groyne, mole, bulwark, seawall, jetty',\r\n  461: 'breastplate, aegis, egis',\r\n  462: 'broom',\r\n  463: 'bucket, pail',\r\n  464: 'buckle',\r\n  465: 'bulletproof vest',\r\n  466: 'bullet train, bullet',\r\n  467: 'butcher shop, meat market',\r\n  468: 'cab, hack, taxi, taxicab',\r\n  469: 'caldron, cauldron',\r\n  470: 'candle, taper, wax light',\r\n  471: 'cannon',\r\n  472: 'canoe',\r\n  473: 'can opener, tin opener',\r\n  474: 'cardigan',\r\n  475: 'car mirror',\r\n  476: 'carousel, carrousel, merry-go-round, roundabout, whirligig',\r\n  477: \"carpenter's kit, tool kit\",\r\n  478: 'carton',\r\n  479: 'car wheel',\r\n  480: 'cash machine, cash dispenser, automated teller machine, automatic teller machine, automated teller, automatic teller, ATM',\r\n  481: 'cassette',\r\n  482: 'cassette player',\r\n  483: 'castle',\r\n  484: 'catamaran',\r\n  485: 'CD player',\r\n  486: 'cello, violoncello',\r\n  487: 'cellular telephone, cellular phone, cellphone, cell, mobile phone',\r\n  488: 'chain',\r\n  489: 'chainlink fence',\r\n  490: 'chain mail, ring mail, mail, chain armor, chain armour, ring armor, ring armour',\r\n  491: 'chain saw, chainsaw',\r\n  492: 'chest',\r\n  493: 'chiffonier, commode',\r\n  494: 'chime, bell, gong',\r\n  495: 'china cabinet, china closet',\r\n  496: 'Christmas stocking',\r\n  497: 'church, church building',\r\n  498: 'cinema, movie theater, movie theatre, movie house, picture palace',\r\n  499: 'cleaver, meat cleaver, chopper',\r\n  500: 'cliff dwelling',\r\n  501: 'cloak',\r\n  502: 'clog, geta, patten, sabot',\r\n  503: 'cocktail shaker',\r\n  504: 'coffee mug',\r\n  505: 'coffeepot',\r\n  506: 'coil, spiral, volute, whorl, helix',\r\n  507: 'combination lock',\r\n  508: 'computer keyboard, keypad',\r\n  509: 'confectionery, confectionary, candy store',\r\n  510: 'container ship, containership, container vessel',\r\n  511: 'convertible',\r\n  512: 'corkscrew, bottle screw',\r\n  513: 'cornet, horn, trumpet, trump',\r\n  514: 'cowboy boot',\r\n  515: 'cowboy hat, ten-gallon hat',\r\n  516: 'cradle',\r\n  517: 'crane',\r\n  518: 'crash helmet',\r\n  519: 'crate',\r\n  520: 'crib, cot',\r\n  521: 'Crock Pot',\r\n  522: 'croquet ball',\r\n  523: 'crutch',\r\n  524: 'cuirass',\r\n  525: 'dam, dike, dyke',\r\n  526: 'desk',\r\n  527: 'desktop computer',\r\n  528: 'dial telephone, dial phone',\r\n  529: 'diaper, nappy, napkin',\r\n  530: 'digital clock',\r\n  531: 'digital watch',\r\n  532: 'dining table, board',\r\n  533: 'dishrag, dishcloth',\r\n  534: 'dishwasher, dish washer, dishwashing machine',\r\n  535: 'disk brake, disc brake',\r\n  536: 'dock, dockage, docking facility',\r\n  537: 'dogsled, dog sled, dog sleigh',\r\n  538: 'dome',\r\n  539: 'doormat, welcome mat',\r\n  540: 'drilling platform, offshore rig',\r\n  541: 'drum, membranophone, tympan',\r\n  542: 'drumstick',\r\n  543: 'dumbbell',\r\n  544: 'Dutch oven',\r\n  545: 'electric fan, blower',\r\n  546: 'electric guitar',\r\n  547: 'electric locomotive',\r\n  548: 'entertainment center',\r\n  549: 'envelope',\r\n  550: 'espresso maker',\r\n  551: 'face powder',\r\n  552: 'feather boa, boa',\r\n  553: 'file, file cabinet, filing cabinet',\r\n  554: 'fireboat',\r\n  555: 'fire engine, fire truck',\r\n  556: 'fire screen, fireguard',\r\n  557: 'flagpole, flagstaff',\r\n  558: 'flute, transverse flute',\r\n  559: 'folding chair',\r\n  560: 'football helmet',\r\n  561: 'forklift',\r\n  562: 'fountain',\r\n  563: 'fountain pen',\r\n  564: 'four-poster',\r\n  565: 'freight car',\r\n  566: 'French horn, horn',\r\n  567: 'frying pan, frypan, skillet',\r\n  568: 'fur coat',\r\n  569: 'garbage truck, dustcart',\r\n  570: 'gasmask, respirator, gas helmet',\r\n  571: 'gas pump, gasoline pump, petrol pump, island dispenser',\r\n  572: 'goblet',\r\n  573: 'go-kart',\r\n  574: 'golf ball',\r\n  575: 'golfcart, golf cart',\r\n  576: 'gondola',\r\n  577: 'gong, tam-tam',\r\n  578: 'gown',\r\n  579: 'grand piano, grand',\r\n  580: 'greenhouse, nursery, glasshouse',\r\n  581: 'grille, radiator grille',\r\n  582: 'grocery store, grocery, food market, market',\r\n  583: 'guillotine',\r\n  584: 'hair slide',\r\n  585: 'hair spray',\r\n  586: 'half track',\r\n  587: 'hammer',\r\n  588: 'hamper',\r\n  589: 'hand blower, blow dryer, blow drier, hair dryer, hair drier',\r\n  590: 'hand-held computer, hand-held microcomputer',\r\n  591: 'handkerchief, hankie, hanky, hankey',\r\n  592: 'hard disc, hard disk, fixed disk',\r\n  593: 'harmonica, mouth organ, harp, mouth harp',\r\n  594: 'harp',\r\n  595: 'harvester, reaper',\r\n  596: 'hatchet',\r\n  597: 'holster',\r\n  598: 'home theater, home theatre',\r\n  599: 'honeycomb',\r\n  600: 'hook, claw',\r\n  601: 'hoopskirt, crinoline',\r\n  602: 'horizontal bar, high bar',\r\n  603: 'horse cart, horse-cart',\r\n  604: 'hourglass',\r\n  605: 'iPod',\r\n  606: 'iron, smoothing iron',\r\n  607: \"jack-o'-lantern\",\r\n  608: 'jean, blue jean, denim',\r\n  609: 'jeep, landrover',\r\n  610: 'jersey, T-shirt, tee shirt',\r\n  611: 'jigsaw puzzle',\r\n  612: 'jinrikisha, ricksha, rickshaw',\r\n  613: 'joystick',\r\n  614: 'kimono',\r\n  615: 'knee pad',\r\n  616: 'knot',\r\n  617: 'lab coat, laboratory coat',\r\n  618: 'ladle',\r\n  619: 'lampshade, lamp shade',\r\n  620: 'laptop, laptop computer',\r\n  621: 'lawn mower, mower',\r\n  622: 'lens cap, lens cover',\r\n  623: 'letter opener, paper knife, paperknife',\r\n  624: 'library',\r\n  625: 'lifeboat',\r\n  626: 'lighter, light, igniter, ignitor',\r\n  627: 'limousine, limo',\r\n  628: 'liner, ocean liner',\r\n  629: 'lipstick, lip rouge',\r\n  630: 'Loafer',\r\n  631: 'lotion',\r\n  632: 'loudspeaker, speaker, speaker unit, loudspeaker system, speaker system',\r\n  633: \"loupe, jeweler's loupe\",\r\n  634: 'lumbermill, sawmill',\r\n  635: 'magnetic compass',\r\n  636: 'mailbag, postbag',\r\n  637: 'mailbox, letter box',\r\n  638: 'maillot',\r\n  639: 'maillot, tank suit',\r\n  640: 'manhole cover',\r\n  641: 'maraca',\r\n  642: 'marimba, xylophone',\r\n  643: 'mask',\r\n  644: 'matchstick',\r\n  645: 'maypole',\r\n  646: 'maze, labyrinth',\r\n  647: 'measuring cup',\r\n  648: 'medicine chest, medicine cabinet',\r\n  649: 'megalith, megalithic structure',\r\n  650: 'microphone, mike',\r\n  651: 'microwave, microwave oven',\r\n  652: 'military uniform',\r\n  653: 'milk can',\r\n  654: 'minibus',\r\n  655: 'miniskirt, mini',\r\n  656: 'minivan',\r\n  657: 'missile',\r\n  658: 'mitten',\r\n  659: 'mixing bowl',\r\n  660: 'mobile home, manufactured home',\r\n  661: 'Model T',\r\n  662: 'modem',\r\n  663: 'monastery',\r\n  664: 'monitor',\r\n  665: 'moped',\r\n  666: 'mortar',\r\n  667: 'mortarboard',\r\n  668: 'mosque',\r\n  669: 'mosquito net',\r\n  670: 'motor scooter, scooter',\r\n  671: 'mountain bike, all-terrain bike, off-roader',\r\n  672: 'mountain tent',\r\n  673: 'mouse, computer mouse',\r\n  674: 'mousetrap',\r\n  675: 'moving van',\r\n  676: 'muzzle',\r\n  677: 'nail',\r\n  678: 'neck brace',\r\n  679: 'necklace',\r\n  680: 'nipple',\r\n  681: 'notebook, notebook computer',\r\n  682: 'obelisk',\r\n  683: 'oboe, hautboy, hautbois',\r\n  684: 'ocarina, sweet potato',\r\n  685: 'odometer, hodometer, mileometer, milometer',\r\n  686: 'oil filter',\r\n  687: 'organ, pipe organ',\r\n  688: 'oscilloscope, scope, cathode-ray oscilloscope, CRO',\r\n  689: 'overskirt',\r\n  690: 'oxcart',\r\n  691: 'oxygen mask',\r\n  692: 'packet',\r\n  693: 'paddle, boat paddle',\r\n  694: 'paddlewheel, paddle wheel',\r\n  695: 'padlock',\r\n  696: 'paintbrush',\r\n  697: \"pajama, pyjama, pj's, jammies\",\r\n  698: 'palace',\r\n  699: 'panpipe, pandean pipe, syrinx',\r\n  700: 'paper towel',\r\n  701: 'parachute, chute',\r\n  702: 'parallel bars, bars',\r\n  703: 'park bench',\r\n  704: 'parking meter',\r\n  705: 'passenger car, coach, carriage',\r\n  706: 'patio, terrace',\r\n  707: 'pay-phone, pay-station',\r\n  708: 'pedestal, plinth, footstall',\r\n  709: 'pencil box, pencil case',\r\n  710: 'pencil sharpener',\r\n  711: 'perfume, essence',\r\n  712: 'Petri dish',\r\n  713: 'photocopier',\r\n  714: 'pick, plectrum, plectron',\r\n  715: 'pickelhaube',\r\n  716: 'picket fence, paling',\r\n  717: 'pickup, pickup truck',\r\n  718: 'pier',\r\n  719: 'piggy bank, penny bank',\r\n  720: 'pill bottle',\r\n  721: 'pillow',\r\n  722: 'ping-pong ball',\r\n  723: 'pinwheel',\r\n  724: 'pirate, pirate ship',\r\n  725: 'pitcher, ewer',\r\n  726: \"plane, carpenter's plane, woodworking plane\",\r\n  727: 'planetarium',\r\n  728: 'plastic bag',\r\n  729: 'plate rack',\r\n  730: 'plow, plough',\r\n  731: \"plunger, plumber's helper\",\r\n  732: 'Polaroid camera, Polaroid Land camera',\r\n  733: 'pole',\r\n  734: 'police van, police wagon, paddy wagon, patrol wagon, wagon, black Maria',\r\n  735: 'poncho',\r\n  736: 'pool table, billiard table, snooker table',\r\n  737: 'pop bottle, soda bottle',\r\n  738: 'pot, flowerpot',\r\n  739: \"potter's wheel\",\r\n  740: 'power drill',\r\n  741: 'prayer rug, prayer mat',\r\n  742: 'printer',\r\n  743: 'prison, prison house',\r\n  744: 'projectile, missile',\r\n  745: 'projector',\r\n  746: 'puck, hockey puck',\r\n  747: 'punching bag, punch bag, punching ball, punchball',\r\n  748: 'purse',\r\n  749: 'quill, quill pen',\r\n  750: 'quilt, comforter, comfort, puff',\r\n  751: 'racer, race car, racing car',\r\n  752: 'racket, racquet',\r\n  753: 'radiator',\r\n  754: 'radio, wireless',\r\n  755: 'radio telescope, radio reflector',\r\n  756: 'rain barrel',\r\n  757: 'recreational vehicle, RV, R.V.',\r\n  758: 'reel',\r\n  759: 'reflex camera',\r\n  760: 'refrigerator, icebox',\r\n  761: 'remote control, remote',\r\n  762: 'restaurant, eating house, eating place, eatery',\r\n  763: 'revolver, six-gun, six-shooter',\r\n  764: 'rifle',\r\n  765: 'rocking chair, rocker',\r\n  766: 'rotisserie',\r\n  767: 'rubber eraser, rubber, pencil eraser',\r\n  768: 'rugby ball',\r\n  769: 'rule, ruler',\r\n  770: 'running shoe',\r\n  771: 'safe',\r\n  772: 'safety pin',\r\n  773: 'saltshaker, salt shaker',\r\n  774: 'sandal',\r\n  775: 'sarong',\r\n  776: 'sax, saxophone',\r\n  777: 'scabbard',\r\n  778: 'scale, weighing machine',\r\n  779: 'school bus',\r\n  780: 'schooner',\r\n  781: 'scoreboard',\r\n  782: 'screen, CRT screen',\r\n  783: 'screw',\r\n  784: 'screwdriver',\r\n  785: 'seat belt, seatbelt',\r\n  786: 'sewing machine',\r\n  787: 'shield, buckler',\r\n  788: 'shoe shop, shoe-shop, shoe store',\r\n  789: 'shoji',\r\n  790: 'shopping basket',\r\n  791: 'shopping cart',\r\n  792: 'shovel',\r\n  793: 'shower cap',\r\n  794: 'shower curtain',\r\n  795: 'ski',\r\n  796: 'ski mask',\r\n  797: 'sleeping bag',\r\n  798: 'slide rule, slipstick',\r\n  799: 'sliding door',\r\n  800: 'slot, one-armed bandit',\r\n  801: 'snorkel',\r\n  802: 'snowmobile',\r\n  803: 'snowplow, snowplough',\r\n  804: 'soap dispenser',\r\n  805: 'soccer ball',\r\n  806: 'sock',\r\n  807: 'solar dish, solar collector, solar furnace',\r\n  808: 'sombrero',\r\n  809: 'soup bowl',\r\n  810: 'space bar',\r\n  811: 'space heater',\r\n  812: 'space shuttle',\r\n  813: 'spatula',\r\n  814: 'speedboat',\r\n  815: \"spider web, spider's web\",\r\n  816: 'spindle',\r\n  817: 'sports car, sport car',\r\n  818: 'spotlight, spot',\r\n  819: 'stage',\r\n  820: 'steam locomotive',\r\n  821: 'steel arch bridge',\r\n  822: 'steel drum',\r\n  823: 'stethoscope',\r\n  824: 'stole',\r\n  825: 'stone wall',\r\n  826: 'stopwatch, stop watch',\r\n  827: 'stove',\r\n  828: 'strainer',\r\n  829: 'streetcar, tram, tramcar, trolley, trolley car',\r\n  830: 'stretcher',\r\n  831: 'studio couch, day bed',\r\n  832: 'stupa, tope',\r\n  833: 'submarine, pigboat, sub, U-boat',\r\n  834: 'suit, suit of clothes',\r\n  835: 'sundial',\r\n  836: 'sunglass',\r\n  837: 'sunglasses, dark glasses, shades',\r\n  838: 'sunscreen, sunblock, sun blocker',\r\n  839: 'suspension bridge',\r\n  840: 'swab, swob, mop',\r\n  841: 'sweatshirt',\r\n  842: 'swimming trunks, bathing trunks',\r\n  843: 'swing',\r\n  844: 'switch, electric switch, electrical switch',\r\n  845: 'syringe',\r\n  846: 'table lamp',\r\n  847: 'tank, army tank, armored combat vehicle, armoured combat vehicle',\r\n  848: 'tape player',\r\n  849: 'teapot',\r\n  850: 'teddy, teddy bear',\r\n  851: 'television, television system',\r\n  852: 'tennis ball',\r\n  853: 'thatch, thatched roof',\r\n  854: 'theater curtain, theatre curtain',\r\n  855: 'thimble',\r\n  856: 'thresher, thrasher, threshing machine',\r\n  857: 'throne',\r\n  858: 'tile roof',\r\n  859: 'toaster',\r\n  860: 'tobacco shop, tobacconist shop, tobacconist',\r\n  861: 'toilet seat',\r\n  862: 'torch',\r\n  863: 'totem pole',\r\n  864: 'tow truck, tow car, wrecker',\r\n  865: 'toyshop',\r\n  866: 'tractor',\r\n  867: 'trailer truck, tractor trailer, trucking rig, rig, articulated lorry, semi',\r\n  868: 'tray',\r\n  869: 'trench coat',\r\n  870: 'tricycle, trike, velocipede',\r\n  871: 'trimaran',\r\n  872: 'tripod',\r\n  873: 'triumphal arch',\r\n  874: 'trolleybus, trolley coach, trackless trolley',\r\n  875: 'trombone',\r\n  876: 'tub, vat',\r\n  877: 'turnstile',\r\n  878: 'typewriter keyboard',\r\n  879: 'umbrella',\r\n  880: 'unicycle, monocycle',\r\n  881: 'upright, upright piano',\r\n  882: 'vacuum, vacuum cleaner',\r\n  883: 'vase',\r\n  884: 'vault',\r\n  885: 'velvet',\r\n  886: 'vending machine',\r\n  887: 'vestment',\r\n  888: 'viaduct',\r\n  889: 'violin, fiddle',\r\n  890: 'volleyball',\r\n  891: 'waffle iron',\r\n  892: 'wall clock',\r\n  893: 'wallet, billfold, notecase, pocketbook',\r\n  894: 'wardrobe, closet, press',\r\n  895: 'warplane, military plane',\r\n  896: 'washbasin, handbasin, washbowl, lavabo, wash-hand basin',\r\n  897: 'washer, automatic washer, washing machine',\r\n  898: 'water bottle',\r\n  899: 'water jug',\r\n  900: 'water tower',\r\n  901: 'whiskey jug',\r\n  902: 'whistle',\r\n  903: 'wig',\r\n  904: 'window screen',\r\n  905: 'window shade',\r\n  906: 'Windsor tie',\r\n  907: 'wine bottle',\r\n  908: 'wing',\r\n  909: 'wok',\r\n  910: 'wooden spoon',\r\n  911: 'wool, woolen, woollen',\r\n  912: 'worm fence, snake fence, snake-rail fence, Virginia fence',\r\n  913: 'wreck',\r\n  914: 'yawl',\r\n  915: 'yurt',\r\n  916: 'web site, website, internet site, site',\r\n  917: 'comic book',\r\n  918: 'crossword puzzle, crossword',\r\n  919: 'street sign',\r\n  920: 'traffic light, traffic signal, stoplight',\r\n  921: 'book jacket, dust cover, dust jacket, dust wrapper',\r\n  922: 'menu',\r\n  923: 'plate',\r\n  924: 'guacamole',\r\n  925: 'consomme',\r\n  926: 'hot pot, hotpot',\r\n  927: 'trifle',\r\n  928: 'ice cream, icecream',\r\n  929: 'ice lolly, lolly, lollipop, popsicle',\r\n  930: 'French loaf',\r\n  931: 'bagel, beigel',\r\n  932: 'pretzel',\r\n  933: 'cheeseburger',\r\n  934: 'hotdog, hot dog, red hot',\r\n  935: 'mashed potato',\r\n  936: 'head cabbage',\r\n  937: 'broccoli',\r\n  938: 'cauliflower',\r\n  939: 'zucchini, courgette',\r\n  940: 'spaghetti squash',\r\n  941: 'acorn squash',\r\n  942: 'butternut squash',\r\n  943: 'cucumber, cuke',\r\n  944: 'artichoke, globe artichoke',\r\n  945: 'bell pepper',\r\n  946: 'cardoon',\r\n  947: 'mushroom',\r\n  948: 'Granny Smith',\r\n  949: 'strawberry',\r\n  950: 'orange',\r\n  951: 'lemon',\r\n  952: 'fig',\r\n  953: 'pineapple, ananas',\r\n  954: 'banana',\r\n  955: 'jackfruit, jak, jack',\r\n  956: 'custard apple',\r\n  957: 'pomegranate',\r\n  958: 'hay',\r\n  959: 'carbonara',\r\n  960: 'chocolate sauce, chocolate syrup',\r\n  961: 'dough',\r\n  962: 'meat loaf, meatloaf',\r\n  963: 'pizza, pizza pie',\r\n  964: 'potpie',\r\n  965: 'burrito',\r\n  966: 'red wine',\r\n  967: 'espresso',\r\n  968: 'cup',\r\n  969: 'eggnog',\r\n  970: 'alp',\r\n  971: 'bubble',\r\n  972: 'cliff, drop, drop-off',\r\n  973: 'coral reef',\r\n  974: 'geyser',\r\n  975: 'lakeside, lakeshore',\r\n  976: 'promontory, headland, head, foreland',\r\n  977: 'sandbar, sand bar',\r\n  978: 'seashore, coast, seacoast, sea-coast',\r\n  979: 'valley, vale',\r\n  980: 'volcano',\r\n  981: 'ballplayer, baseball player',\r\n  982: 'groom, bridegroom',\r\n  983: 'scuba diver',\r\n  984: 'rapeseed',\r\n  985: 'daisy',\r\n  986: \"yellow lady's slipper, yellow lady-slipper, Cypripedium calceolus, Cypripedium parviflorum\",\r\n  987: 'corn',\r\n  988: 'acorn',\r\n  989: 'hip, rose hip, rosehip',\r\n  990: 'buckeye, horse chestnut, conker',\r\n  991: 'coral fungus',\r\n  992: 'agaric',\r\n  993: 'gyromitra',\r\n  994: 'stinkhorn, carrion fungus',\r\n  995: 'earthstar',\r\n  996: 'hen-of-the-woods, hen of the woods, Polyporus frondosus, Grifola frondosa',\r\n  997: 'bolete',\r\n  998: 'ear, spike, capitulum',\r\n  999: 'toilet tissue, toilet paper, bathroom tissue'\r\n};\r\n","export default {\r\n  API_ENDPOINT: 'https://michaelfeil.github.io/web-tfjs/api',\r\n  // API_ENDPOINT: 'https://[YOUR-ROUTE].mybluemix.net/api'\r\n};\r\n","import React, { Component, Fragment } from 'react';\r\nimport {\r\n  Alert, Button, Collapse, Container, Form, Spinner, ListGroup, Tabs, Tab\r\n} from 'react-bootstrap';\r\nimport { FaCamera, FaChevronDown, FaChevronRight } from 'react-icons/fa';\r\nimport { openDB } from 'idb';\r\nimport Cropper  from 'react-cropper';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport LoadButton from '../components/LoadButton';\r\nimport { MODEL_CLASSES } from '../model/classes';\r\nimport config from '../config';\r\nimport './Classify.css';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\n\r\nconst MODEL_PATH = './model/model.json';\r\nconst IMAGE_SIZE = 224;\r\nconst CANVAS_SIZE = 224;\r\nconst TOPK_PREDICTIONS = 5;\r\n\r\nconst INDEXEDDB_DB = 'tensorflowjs';\r\nconst INDEXEDDB_STORE = 'model_info_store';\r\nconst INDEXEDDB_KEY = 'web-model';\r\n\r\n/**\r\n * Class to handle the rendering of the Classify page.\r\n * @extends React.Component\r\n */\r\nexport default class Classify extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.webcam = null;\r\n    this.model = null;\r\n    this.modelLastUpdated = null;\r\n\r\n    this.state = {\r\n      modelLoaded: false,\r\n      filename: '',\r\n      isModelLoading: false,\r\n      isClassifying: false,\r\n      predictions: [],\r\n      photoSettingsOpen: true,\r\n      modelUpdateAvailable: false,\r\n      showModelUpdateAlert: false,\r\n      showModelUpdateSuccess: false,\r\n      isDownloadingModel: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (('indexedDB' in window)) { //before if (('indexedDB' in window)) {\r\n      try {\r\n\t\t    console.log('Start loading model');\r\n        this.model = await tf.loadLayersModel('indexeddb://' + INDEXEDDB_KEY);\r\n        // Safe to assume tensorflowjs database and related object store exists.\r\n        // Get the date when the model was saved.\r\n        try {\r\n          const db = await openDB(INDEXEDDB_DB, 1, );\r\n          const item = await db.transaction(INDEXEDDB_STORE)\r\n                               .objectStore(INDEXEDDB_STORE)\r\n                               .get(INDEXEDDB_KEY);\r\n          const dateSaved = new Date(item.modelArtifactsInfo.dateSaved);\r\n          await this.getModelInfo();\r\n          console.log(this.modelLastUpdated);\r\n          if (!this.modelLastUpdated  || dateSaved >= new Date(this.modelLastUpdated).getTime()) {\r\n            console.log('Using saved model');\r\n          }\r\n          else {\r\n            this.setState({\r\n              modelUpdateAvailable: true,\r\n              showModelUpdateAlert: true,\r\n            });\r\n          }\r\n\r\n        }\r\n        catch (error) {\r\n          console.warn(error);\r\n          console.warn('Could not retrieve when model was saved.');\r\n        }\r\n\r\n      }\r\n      // If error here, assume that the object store doesn't exist and the model currently isn't\r\n      // saved in IndexedDB.\r\n      catch (error) {\r\n        console.log('Not found in IndexedDB. Loading and saving...');\r\n        console.log(error);\r\n        this.model = await tf.loadLayersModel(MODEL_PATH);\r\n        await this.model.save('indexeddb://' + INDEXEDDB_KEY);\r\n      }\r\n    }\r\n    // If no IndexedDB, then just download like normal.\r\n    else {\r\n      console.warn('IndexedDB not supported.');\r\n      this.model = await tf.loadLayersModel(MODEL_PATH);\r\n    }\r\n\r\n    this.setState({ modelLoaded: true });\r\n    this.initWebcam();\r\n\r\n    // Warm up model.\r\n    let prediction = tf.tidy(() => this.model.predict(tf.zeros([1, IMAGE_SIZE, IMAGE_SIZE, 3])));\r\n    prediction.dispose();\r\n  }\r\n\r\n  async componentWillUnmount() {\r\n    if (this.webcam) {\r\n      this.webcam.stop();\r\n    }\r\n\r\n    // Attempt to dispose of the model.\r\n    try {\r\n      this.model.dispose();\r\n    }\r\n    catch (e) {\r\n      // Assume model is not loaded or already disposed.\r\n    }\r\n  }\r\n\r\n  initWebcam = async () => {\r\n    try {\r\n      this.webcam = await tf.data.webcam(\r\n        this.refs.webcam,\r\n        {resizeWidth: CANVAS_SIZE, resizeHeight: CANVAS_SIZE, facingMode: 'environment'}\r\n      );\r\n    }\r\n    catch (e) {\r\n      this.refs.noWebcam.style.display = 'block';\r\n    }\r\n  }\r\n\r\n  startWebcam = async () => {\r\n    if (this.webcam) {\r\n      this.webcam.start();\r\n    }\r\n  }\r\n\r\n  stopWebcam = async () => {\r\n    if (this.webcam) {\r\n      this.webcam.stop();\r\n    }\r\n  }\r\n\r\n  getModelInfo = async () => {\r\n    await fetch(`${config.API_ENDPOINT}/model_info`, {\r\n      method: 'GET',\r\n    })\r\n    .then(async (response) => {\r\n      await response.json().then((data) => {\r\n        this.modelLastUpdated = data.last_updated;\r\n      })\r\n      .catch((err) => {\r\n        console.log('Unable to get parse model info.');\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log('Unable to get model info');\r\n    });\r\n  }\r\n\r\n  updateModel = async () => {\r\n    // Get the latest model from the server and refresh the one saved in IndexedDB.\r\n    console.log('Updating the model: ' + INDEXEDDB_KEY);\r\n    this.setState({ isDownloadingModel: true });\r\n    this.model = await tf.loadLayersModel(MODEL_PATH);\r\n    await this.model.save('indexeddb://' + INDEXEDDB_KEY);\r\n    this.setState({\r\n      isDownloadingModel: false,\r\n      modelUpdateAvailable: false,\r\n      showModelUpdateAlert: false,\r\n      showModelUpdateSuccess: true\r\n    });\r\n  }\r\n\r\n  classifyLocalImage = async () => {\r\n    this.setState({ isClassifying: true });\r\n\r\n    const croppedCanvas = this.refs.cropper.getCroppedCanvas();\r\n    const image = tf.tidy( () => tf.browser.fromPixels(croppedCanvas).toFloat());\r\n\r\n    // Process and resize image before passing in to model.\r\n    const imageData = await this.processImage(image);\r\n    const resizedImage = tf.image.resizeBilinear(imageData, [IMAGE_SIZE, IMAGE_SIZE]);\r\n\r\n    const logits = this.model.predict(resizedImage);\r\n    const probabilities = await logits.data();\r\n    const preds = await this.getTopKClasses(probabilities, TOPK_PREDICTIONS);\r\n\r\n    this.setState({\r\n      predictions: preds,\r\n      isClassifying: false,\r\n      photoSettingsOpen: !this.state.photoSettingsOpen\r\n    });\r\n\r\n    // Draw thumbnail to UI.\r\n    const context = this.refs.canvas.getContext('2d');\r\n    const ratioX = CANVAS_SIZE / croppedCanvas.width;\r\n    const ratioY = CANVAS_SIZE / croppedCanvas.height;\r\n    const ratio = Math.min(ratioX, ratioY);\r\n    context.clearRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);\r\n    context.drawImage(croppedCanvas, 0, 0,\r\n                      croppedCanvas.width * ratio, croppedCanvas.height * ratio);\r\n\r\n    // Dispose of tensors we are finished with.\r\n    image.dispose();\r\n    imageData.dispose();\r\n    resizedImage.dispose();\r\n    logits.dispose();\r\n  }\r\n\r\n  classifyWebcamImage = async () => {\r\n    this.setState({ isClassifying: true });\r\n\r\n    const imageCapture = await this.webcam.capture();\r\n\r\n    const resized = tf.image.resizeBilinear(imageCapture, [IMAGE_SIZE, IMAGE_SIZE]);\r\n    const imageData = await this.processImage(resized);\r\n    const logits = this.model.predict(imageData);\r\n    const probabilities = await logits.data();\r\n    const preds = await this.getTopKClasses(probabilities, TOPK_PREDICTIONS);\r\n\r\n    this.setState({\r\n      predictions: preds,\r\n      isClassifying: false,\r\n      photoSettingsOpen: !this.state.photoSettingsOpen\r\n    });\r\n\r\n    // Draw thumbnail to UI.\r\n    const tensorData = tf.tidy(() => imageCapture.toFloat().div(255));\r\n    await tf.browser.toPixels(tensorData, this.refs.canvas);\r\n\r\n    // Dispose of tensors we are finished with.\r\n    resized.dispose();\r\n    imageCapture.dispose();\r\n    imageData.dispose();\r\n    logits.dispose();\r\n    tensorData.dispose();\r\n  }\r\n\r\n  processImage = async (image) => {\r\n    return tf.tidy(() => image.expandDims(0).toFloat().div(127).sub(1));\r\n  }\r\n\r\n  /**\r\n   * Computes the probabilities of the topK classes given logits by computing\r\n   * softmax to get probabilities and then sorting the probabilities.\r\n   * @param logits Tensor representing the logits from MobileNet.\r\n   * @param topK The number of top predictions to show.\r\n   */\r\n  getTopKClasses = async (values, topK) => {\r\n    const valuesAndIndices = [];\r\n    for (let i = 0; i < values.length; i++) {\r\n      valuesAndIndices.push({value: values[i], index: i});\r\n    }\r\n    valuesAndIndices.sort((a, b) => {\r\n      return b.value - a.value;\r\n    });\r\n    const topkValues = new Float32Array(topK);\r\n    const topkIndices = new Int32Array(topK);\r\n    for (let i = 0; i < topK; i++) {\r\n      topkValues[i] = valuesAndIndices[i].value;\r\n      topkIndices[i] = valuesAndIndices[i].index;\r\n    }\r\n\r\n    const topClassesAndProbs = [];\r\n    for (let i = 0; i < topkIndices.length; i++) {\r\n      topClassesAndProbs.push({\r\n        className: MODEL_CLASSES[topkIndices[i]],\r\n        probability: (topkValues[i] * 100).toFixed(2)\r\n      });\r\n    }\r\n    return topClassesAndProbs;\r\n  }\r\n\r\n  handlePanelClick = event => {\r\n    this.setState({ photoSettingsOpen: !this.state.photoSettingsOpen });\r\n  }\r\n\r\n  handleFileChange = event => {\r\n    if (event.target.files && event.target.files.length > 0) {\r\n      this.setState({\r\n        file: URL.createObjectURL(event.target.files[0]),\r\n        filename: event.target.files[0].name\r\n      });\r\n    }\r\n  }\r\n\r\n  handleTabSelect = activeKey => {\r\n    switch(activeKey) {\r\n      case 'camera':\r\n        this.startWebcam();\r\n        break;\r\n      case 'localfile':\r\n        this.setState({filename: null, file: null});\r\n        this.stopWebcam();\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Classify container\">\r\n\r\n      { !this.state.modelLoaded &&\r\n        <Fragment>\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n          {' '}<span className=\"loading-model-text\">Loading Model into your browser</span>\r\n          <div className=\"loader-message1\">{\"May take up to 60 seconds, depending on your device.\"}</div> \r\n          <div className=\"loader-message2\">{\"All webcam / camera images are only processed locally in your Browser. For more infos visit the 'About TF.js Classifier Page'. \"}</div> \r\n        </Fragment>\r\n      }\r\n\r\n      { this.state.modelLoaded &&\r\n        <Fragment>\r\n        <Button\r\n          onClick={this.handlePanelClick}\r\n          className=\"classify-panel-header\"\r\n          aria-controls=\"photo-selection-pane\"\r\n          aria-expanded={this.state.photoSettingsOpen}\r\n          >\r\n          Take or Select a Photo to Classify\r\n            <span className='panel-arrow'>\r\n            { this.state.photoSettingsOpen\r\n              ? <FaChevronDown />\r\n              : <FaChevronRight />\r\n            }\r\n            </span>\r\n          </Button>\r\n          <Collapse in={this.state.photoSettingsOpen}>\r\n            <div id=\"photo-selection-pane\">\r\n            { this.state.modelUpdateAvailable && this.state.showModelUpdateAlert &&\r\n                <Container>\r\n                  <Alert\r\n                    variant=\"info\"\r\n                    show={this.state.modelUpdateAvailable && this.state.showModelUpdateAlert}\r\n                    onClose={() => this.setState({ showModelUpdateAlert: false})}\r\n                    dismissible>\r\n                      An update for the <strong>{this.state.modelType}</strong> model is available.\r\n                      <div className=\"d-flex justify-content-center pt-1\">\r\n                        {!this.state.isDownloadingModel &&\r\n                          <Button onClick={this.updateModel}\r\n                                  variant=\"outline-info\">\r\n                            Update\r\n                          </Button>\r\n                        }\r\n                        {this.state.isDownloadingModel &&\r\n                          <div>\r\n                            <Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n                              <span className=\"sr-only\">Downloading...</span>\r\n                            </Spinner>\r\n                            {' '}<strong>Downloading...</strong>\r\n                          </div>\r\n                        }\r\n                      </div>\r\n                  </Alert>\r\n                </Container>\r\n              }\r\n              {this.state.showModelUpdateSuccess &&\r\n                <Container>\r\n                  <Alert variant=\"success\"\r\n                         onClose={() => this.setState({ showModelUpdateSuccess: false})}\r\n                         dismissible>\r\n                    The <strong>{this.state.modelType}</strong> model has been updated!\r\n                  </Alert>\r\n                </Container>\r\n              }\r\n            <Tabs defaultActiveKey=\"camera\" id=\"input-options\" onSelect={this.handleTabSelect}\r\n                  className=\"justify-content-center\">\r\n              <Tab eventKey=\"camera\" title=\"Take Photo\">\r\n                <div id=\"no-webcam\" ref=\"noWebcam\">\r\n                  <span className=\"camera-icon\"><FaCamera /></span>\r\n                  No camera found. <br />\r\n                  Please use a device with a camera, or upload an image instead.\r\n                </div>\r\n                <div className=\"webcam-box-outer\">\r\n                  <div className=\"webcam-box-inner\">\r\n                    <video ref=\"webcam\" autoPlay playsInline muted id=\"webcam\"\r\n                           width=\"448\" height=\"448\">\r\n                    </video>\r\n                  </div>\r\n                </div>\r\n                <div className=\"button-container\">\r\n                  <LoadButton\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    onClick={this.classifyWebcamImage}\r\n                    isLoading={this.state.isClassifying}\r\n                    text=\"Classify\"\r\n                    loadingText=\"Classifying...\"\r\n                  />\r\n                </div>\r\n              </Tab>\r\n              <Tab eventKey=\"localfile\" title=\"Select Local File\">\r\n                <Form.Group controlId=\"file\">\r\n                  <Form.Label>Select Image File</Form.Label><br />\r\n                  <Form.Label className=\"imagelabel\">\r\n                    {this.state.filename ? this.state.filename : 'Browse...'}\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    onChange={this.handleFileChange}\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    className=\"imagefile\" />\r\n                </Form.Group>\r\n                { this.state.file &&\r\n                  <Fragment>\r\n                    <div id=\"local-image\">\r\n                      <Cropper\r\n                        ref=\"cropper\"\r\n                        src={this.state.file}\r\n                        style={{height: 400, width: '100%'}}\r\n                        guides={true}\r\n                        aspectRatio={1 / 1}\r\n                        viewMode={2}\r\n                      />\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                      <LoadButton\r\n                        variant=\"primary\"\r\n                        size=\"lg\"\r\n                        disabled={!this.state.filename}\r\n                        onClick={this.classifyLocalImage}\r\n                        isLoading={this.state.isClassifying}\r\n                        text=\"Classify\"\r\n                        loadingText=\"Classifying...\"\r\n                      />\r\n                    </div>\r\n                  </Fragment>\r\n                }\r\n              </Tab>\r\n            </Tabs>\r\n            </div>\r\n          </Collapse>\r\n          { this.state.predictions.length > 0 &&\r\n            <div className=\"classification-results\">\r\n              <h3>Predictions</h3>\r\n              <canvas ref=\"canvas\" width={CANVAS_SIZE} height={CANVAS_SIZE} />\r\n              <br />\r\n              <ListGroup>\r\n              {this.state.predictions.map((category) => {\r\n                  return (\r\n                    <ListGroup.Item key={category.className}>\r\n                      <strong>{category.className}</strong> {category.probability}%</ListGroup.Item>\r\n                  );\r\n              })}\r\n              </ListGroup>\r\n            </div>\r\n          }\r\n          </Fragment>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './NotFound.css';\r\n\r\n/**\r\n * This is rendered when a route is not found (404).\r\n */\r\nexport default () =>\r\n  <div className=\"NotFound\">\r\n    <h1>404</h1>\r\n    <h3>The page you were looking for is not here.</h3>\r\n    <a href=\"/\">Go Home</a>\r\n  </div>;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Abouttfjs from './pages/Abouttfjs';\r\nimport Classify from './pages/Classify';\r\nimport NotFound from './pages/NotFound';\r\n\r\nexport default ({ childProps }) =>\r\n  <Switch>\r\n    <Route path=\"/web-tfjs\" exact component={Classify} props={childProps} />\r\n    <Route path=\"/web-tfjs/abouttfjs\" exact component={Abouttfjs} props={childProps} />\r\n    <Route component={NotFound} />\r\n  </Switch>;\r\n","import { PropTypes } from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\nimport AlertDismissable from './components/AlertDismissable';\r\nimport Routes from './Routes';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const reloadMsg = `\r\n      New content is available.<br />\r\n      Please <a href='javascript:location.reload();'>reload</a>.<br />\r\n      <small>If reloading doesn't work, close all tabs/windows of this web application,\r\n      and then reopen the application.</small>\r\n    `;\r\n    this.state = {\r\n      showUpdateAlert: true,\r\n      reloadMsg: reloadMsg\r\n    };\r\n  }\r\n\r\n  dismissUpdateAlert = event => {\r\n    this.setState({ showUpdateAlert: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"App\">\r\n          <Container>\r\n            <Navbar collapseOnSelect className=\"app-nav-bar\" variant=\"dark\" expand=\"lg\">\r\n              <Navbar.Brand href=\"/web-tfjs/\">Tensorflow.js Classfier</Navbar.Brand>\r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"\">\r\n                  <Link className=\"nav-link\" to=\"/web-tfjs/\"> Webcam </Link>\r\n                  <Link className=\"nav-link\" to=\"/web-tfjs/abouttfjs\"> About TF.js Classfier </Link>\r\n                  \r\n                </Nav>\r\n                <Nav pullRight>\r\n                  <a className=\"nav-link\" href=\"https://michaelfeil.github.io/academicpages/\"> Return to Academicpage </a>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n            { this.props.updateAvailable && this.state.showUpdateAlert &&\r\n              <div style={{paddingTop: '10px'}}>\r\n                <AlertDismissable\r\n                  title=\"\"\r\n                  variant=\"info\"\r\n                  message={this.state.reloadMsg}\r\n                  show={this.props.updateAvailable && this.state.showUpdateAlert}\r\n                  onClose={this.dismissUpdateAlert} />\r\n              </div>\r\n            }\r\n          </Container>\r\n          <Container>\r\n            <Routes />\r\n          </Container>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  updateAvailable: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      // A new service worker has previously finished installing, and is now waiting.\r\n      if (registration.waiting && registration.active) {\r\n        newerSwAvailable(registration.waiting);\r\n      }\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              newerSwAvailable(installingWorker);\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n      function newerSwAvailable(sw){\r\n        // At this point, the updated precached content has been fetched,\r\n        // but the previous service worker will still serve the older\r\n        // content until all client tabs are closed.\r\n        console.log(\r\n          'New content is available and will be used when all ' +\r\n            'tabs for this page are closed. See http://bit.ly/CRA2-PWA.'\r\n        );\r\n        if (config && config.onUpdate) {\r\n          config.onUpdate(registration, sw);\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nclass Index extends Component {\r\n  state = {\r\n    contentCached: false,\r\n    updateAvailable: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const config = {\r\n      onUpdate: this.handleUpdate,\r\n    };\r\n\r\n    // If you want your app to work offline and load faster, you can change\r\n    // unregister() to register() below. Note this comes with some pitfalls.\r\n    // Learn more about service workers: https://bit.ly/CRA-PWA\r\n    serviceWorker.register(config);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <App updateAvailable={this.state.updateAvailable} />\r\n      </Router>\r\n    );\r\n  }\r\n\r\n  handleUpdate = (registration) => {\r\n    const waitingServiceWorker = registration.waiting;\r\n\r\n    if (waitingServiceWorker) {\r\n      waitingServiceWorker.postMessage({ type: 'SKIP_WAITING' });\r\n    }\r\n    this.setState({ updateAvailable: true});\r\n  }\r\n}\r\n\r\nReactDOM.render(<Index />, document.getElementById('root'));\r\n"],"sourceRoot":""}